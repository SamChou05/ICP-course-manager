service: () -> {
    createUser: (text) -> (record {id:principal; username:text; createdAt:nat64; courseIds:vec text});
    deleteCourse: (principal) -> (variant {Ok:record {id:text; title:text; updated_at:nat64; creator:principal; description:text; created_date:nat64}; Err:variant {UserDoesNotExist:principal; CourseDoesNotExist:principal}});
    deleteUser: (principal) -> (variant {Ok:record {id:principal; username:text; createdAt:nat64; courseIds:vec text}; Err:variant {UserDoesNotExist:principal; CourseDoesNotExist:principal}});
    enrollCourse: (principal, record {title:text; description:text; assigned_to:text}) -> (variant {Ok:record {id:text; title:text; updated_at:nat64; creator:principal; description:text; created_date:nat64}; Err:variant {UserDoesNotExist:principal; CourseDoesNotExist:principal}});
    readCourseById: (text) -> (opt record {id:text; title:text; updated_at:nat64; creator:principal; description:text; created_date:nat64}) query;
    readCourses: () -> (vec record {id:text; title:text; updated_at:nat64; creator:principal; description:text; created_date:nat64}) query;
    readUserById: (principal) -> (opt record {id:principal; username:text; createdAt:nat64; courseIds:vec text}) query;
    readUserIdByUsername: (text) -> (opt principal) query;
    readUsers: () -> (vec text) query;
}
