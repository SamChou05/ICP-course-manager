service : {
  createCourse : (record { title : text; description : text }) -> (
      variant {
        Ok : record {
          id : text;
          title : text;
          updated_at : nat64;
          description : text;
          created_date : nat64;
        };
        Err : variant {
          UserDoesNotExist : principal;
          CourseDoesNotExist : text;
        };
      },
    );
  createUser : (text) -> (
      record {
        id : principal;
        username : text;
        createdAt : nat64;
        courseIds : vec text;
      },
    );
  deleteUser : (principal) -> (
      variant {
        Ok : record {
          id : principal;
          username : text;
          createdAt : nat64;
          courseIds : vec text;
        };
        Err : variant {
          UserDoesNotExist : principal;
          CourseDoesNotExist : text;
        };
      },
    );
  enrollCourse : (principal, text) -> (
      variant {
        Ok : record {
          id : text;
          title : text;
          updated_at : nat64;
          description : text;
          created_date : nat64;
        };
        Err : variant {
          UserDoesNotExist : principal;
          CourseDoesNotExist : text;
        };
      },
    );
  readUsers : () -> (vec text) query;
  readUsersByUsername : (text) -> (vec principal) query;
}